[tool.poetry]
name = 'phpytex'
version = '1.5.2a'
description = 'A transpiler which converts python augmented latex to latex'
homepage = 'https://github.com/RLogik/phpytex'
authors = [
    'RLogik <rlogik@users.noreply.github.com>',
]
maintainers = [
    'RLogik <rlogik@users.noreply.github.com>',
]
license = 'LICENCE'
readme = 'README.md'
keywords = [
    'python',
    'latex',
    'transpiler',
    'lark',
]
# cf. https://pypi.org/classifiers
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]

[tool.poetry.dependencies]
# --------------------------------
# compiler
# --------------------------------
python = ">=3.10,<4.0"
pip = {version='^24.2'}
poetry = {version='^1.8.3'}
wheel = {version='^0.43.0'}
setuptools = {version='^72.0.0'}
# --------------------------------
# code - general
# --------------------------------
pathlib = {version='^1.0.1'}
pathspec = {version='^0.12.1'}
typing = {version='^3.7.4.3'}
# --------------------------------
# code - async, distr. system
# --------------------------------
asyncio = {version='^3.4.3'}
anyio = {version='^4.4.0'}
# --------------------------------
# config
# --------------------------------
toml = {version='^0.10.2'}
argparse = {version='^1.4.0'}
python-dotenv = {version='^1.0.1'}
jsonschema = {version='^4.23.0'}
lazy-load = {version='^0.8.3'}
pyyaml = {version='^6.0.1'}
# --------------------------------
# models
# --------------------------------
dataclasses = {version='^0.6'} # not latest, otherwise conflicts with other packages
pydantic = {version='~2.8.2'}
pydantic-yaml = {version='^1.3.0'}
# --------------------------------
# data
# --------------------------------
numpy = {version='~1,^1.24.0'} # ensures major version = 1, and version >= 1.24.0
pandas = {version='^2.2.2'}
# --------------------------------
# parsing
# --------------------------------
lark = {extras=['regex'], version='^1.1.9'}
lark-parser = {extras=['regex'], version='^0.12.0'}
# --------------------------------
# miscellaneous
# --------------------------------
datetime = {version='^5.5'}
pendulum = {version='^3.0.0'}
pytz = {version='^2024.1'}
lorem-text = {version='^2.1'}
flatDict= {version='^4.0.1'}
codetiming = {version='^1.4.0'}

[tool.poetry.dev-dependencies]
# --------------------------------
# testing
# --------------------------------
coverage = {extras=['toml'], version='^7.6.0'}
pytest-cov = {version='^5.0.0'}
pytest-lazy-fixture = {version='^0.6.3'}
pytest-order = {version='^1.2.1'}
pytest = {version='^7.4.4,~7'}
testfixtures = {version='^8.3.0'}
behave = {version='^1.2.6'}
# --------------------------------
# model
# --------------------------------
datamodel-code-generator = {version='^0.25.8'}
openapi-generator-cli = {version='^4.3.1'}
openapi-generator = {version='^1.0.6'}
# --------------------------------
# hooks and linting
# --------------------------------
pre-commit = {version='^3.8.0'}
black = {extras=['d', 'jupyter'], version='^24.4.2'}

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
# NOTE: depends on name of project!
phpytex = [
    'models/*.yaml',
]

[tool.setuptools.packages.find]
where = [ 'src' ]
# NOTE: depends on name of project!
include = [ 'phpytex*' ]
namespaces = true

[tool.black]
line-length = 96
skip-string-normalization = true # prevents ' -> " conversion
target-version = [ 'py311' ]
# include = '^.*\.py$' # NOTE: this does nothing!
# extend-ignore = [ 'E501', 'E703' ] # NOTE: this does not work!

[tool.pytest.ini_options]
minversion = "7.4.4"
testpaths = [
    "tests",
]
python_files = [
    "**/tests_*.py", # <- pattern for file names to be tested
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
# NOTE: appends (not prepends) flags:
addopts = [
    "--order-dependencies",
    "--order-group-scope=module",
    "--cache-clear",
    "--verbose",
    "--maxfail=1",
    "-k test_", # <- pattern for methods to count as tests
    "-k tests_", # <- pattern for methods to count as tests
    # NOTE: will be ignored, if --cov not used (e.g. integration tests):
    "--no-cov-on-fail",
    "--cov-report=term",
    "--cov-config=.coveragerc",
    # NOTE: for development purposes only:
    # "-s", # verbose print/err capturing disabled
    "--capture=tee-sys", # verbose print/err capturing enabled
]
