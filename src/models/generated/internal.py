# generated by datamodel-codegen:
#   filename:  schema-internal.yaml

from __future__ import annotations

from pydantic import AnyUrl, BaseModel, ConfigDict, Field


class Urls(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    homepage: AnyUrl = "https://domain.com"


class RepoInfo(BaseModel):
    """
    Basic infos about repo - parses `pyproject.toml`
    """

    model_config = ConfigDict(
        extra="allow",
        populate_by_name=True,
    )
    name: str
    description: str
    version: str
    urls: Urls


class AppConfig(BaseModel):
    """
    Structure of main part of config
    """

    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    user_config_pattern: str = Field(
        ...,
        alias="user-config-pattern",
        description="Used to automatically recognise user config file.",
    )
